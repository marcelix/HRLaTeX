%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 114 407 353 599 
%%LanguageLevel: 1
%%Creator: CorelDRAW 10
%%Title: SL_205.eps
%%CreationDate: Sat Jul 10 21:05:52 2004
%%For: Full Name
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 10 Version 10.410
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
114.17046 498.76923 350.18986 499.09181 @E
 0 O 0 @g
0.81 0.69 0.69 0.63 k
/$fm 0 def
350.18929 499.09124 m
114.17046 499.09124 L
114.17046 498.76809 L
350.18929 498.76809 L
350.18929 499.09124 L
@c
F

@rax %Note: Object
348.21468 497.27764 352.16504 500.62365 @E
 0 O 0 @g
0.81 0.69 0.69 0.63 k
/$fm 0 def
352.16504 498.93250 m
348.21383 500.62365 L
348.21383 500.58482 L
348.25493 500.49921 L
348.29150 500.49921 L
348.29150 500.42183 L
348.33883 500.33962 L
348.37795 500.29880 L
348.41367 500.26224 L
348.41367 500.22028 L
348.41367 500.13694 L
348.41367 500.10038 L
348.45591 500.06239 L
348.45591 500.01846 L
348.49672 499.93852 L
348.49672 499.89912 L
348.53981 499.86028 L
348.53981 499.77524 L
348.53981 499.73811 L
348.53981 499.69559 L
348.57383 499.65647 L
348.57383 499.58079 L
348.61436 499.49433 L
348.61436 499.49433 L
348.61436 499.41213 L
348.61436 499.37641 L
348.61436 499.29137 L
348.61436 499.25282 L
348.61436 499.21427 L
348.61436 499.13405 L
348.61436 499.09124 L
348.61436 499.04759 L
348.61436 498.96992 L
348.61436 498.93250 L
348.61436 498.88828 L
348.61436 498.85313 L
348.61436 498.76809 L
348.61436 498.68787 L
348.61436 498.68787 L
348.61436 498.60992 L
348.61436 498.56513 L
348.61436 498.48973 L
348.61436 498.48973 L
348.61436 498.40668 L
348.61436 498.32249 L
348.57383 498.28677 L
348.57383 498.24369 L
348.53981 498.20598 L
348.53981 498.12548 L
348.53981 498.08608 L
348.53981 498.04214 L
348.49672 497.96334 L
348.49672 497.92620 L
348.45591 497.88227 L
348.45591 497.84173 L
348.41367 497.76293 L
348.41367 497.72069 L
348.41367 497.68186 L
348.41367 497.60334 L
348.37795 497.56195 L
348.33883 497.47890 L
348.29150 497.47890 L
348.29150 497.40123 L
348.25493 497.35984 L
348.21383 497.27594 L
348.21383 497.27594 L
352.16504 498.93250 L
@c
F

@rax %Note: Object
227.00013 407.54608 227.32271 596.03896 @E
 0 O 0 @g
0.81 0.69 0.69 0.63 k
/$fm 0 def
227.00098 596.03641 m
227.00098 407.54608 L
227.32129 407.54608 L
227.32129 596.03641 L
227.00098 596.03641 L
@c
F

@rax %Note: Object
225.46828 594.02353 228.85455 598.01443 @E
 0 O 0 @g
0.81 0.69 0.69 0.63 k
/$fm 0 def
227.16283 598.01357 m
225.46687 594.02239 L
225.50939 594.06265 L
225.59216 594.10743 L
225.62674 594.14173 L
225.66643 594.14173 L
225.75260 594.18227 L
225.79257 594.22479 L
225.82800 594.22479 L
225.86854 594.22479 L
225.95357 594.22479 L
226.03209 594.26844 L
226.03209 594.30643 L
226.11657 594.30643 L
226.15767 594.34583 L
226.23619 594.34583 L
226.23619 594.34583 L
226.31698 594.38551 L
226.39465 594.38551 L
226.43717 594.38551 L
226.47969 594.42973 L
226.51654 594.42973 L
226.59619 594.42973 L
226.63843 594.42973 L
226.67981 594.42973 L
226.71723 594.42973 L
226.79830 594.46715 L
226.84054 594.46715 L
226.87398 594.46715 L
226.96044 594.46715 L
227.00098 594.46715 L
227.04265 594.46715 L
227.07921 594.46715 L
227.16283 594.46715 L
227.20280 594.46715 L
227.24079 594.46715 L
227.32129 594.46715 L
227.36636 594.46715 L
227.44120 594.46715 L
227.44120 594.46715 L
227.52255 594.46715 L
227.56734 594.42973 L
227.64359 594.42973 L
227.68696 594.42973 L
227.72551 594.42973 L
227.80431 594.42973 L
227.84542 594.42973 L
227.88992 594.38551 L
227.96589 594.38551 L
228.00643 594.38551 L
228.04838 594.34583 L
228.08976 594.34583 L
228.16687 594.34583 L
228.24879 594.30643 L
228.24879 594.30643 L
228.32929 594.26844 L
228.36728 594.22479 L
228.45175 594.22479 L
228.45175 594.22479 L
228.53197 594.22479 L
228.61502 594.18227 L
228.65301 594.14173 L
228.69099 594.14173 L
228.73351 594.10743 L
228.81515 594.06265 L
228.84888 594.02239 L
227.16283 598.01357 L
@c
F

@rax %Note: Object
227.16283 477.52554 270.01672 520.37660 @E
1 J 1 j [] 0 d 0 R 0 @G
0.81 0.69 0.69 0.63 K
[0.55987132 0.00000000 0.00000000 0.55987132 0.00000000 0.00000000] 1 0.97880 0.97880 0.00000 @w
/$fm 0 def
248.60806 477.52554 m
249.65518 477.52554 L
250.78394 477.60803 L
251.87102 477.72765 L
252.87959 477.92920 L
253.92614 478.17241 L
254.93187 478.49216 L
255.90104 478.81474 L
256.90819 479.17928 L
257.87622 479.62602 L
258.76630 480.10791 L
259.69266 480.58923 L
260.53597 481.15502 L
261.38863 481.76079 L
262.19140 482.40227 L
262.95931 483.08598 L
263.72409 483.76998 L
264.40866 484.53902 L
265.09578 485.30721 L
265.73783 486.15052 L
266.34501 486.99751 L
266.90939 487.84479 L
267.39326 488.73402 L
267.87345 489.66236 L
268.32047 490.62614 L
268.68132 491.59361 L
269.04557 492.60132 L
269.32394 493.61272 L
269.61052 494.65984 L
269.77266 495.66161 L
269.89002 496.75181 L
269.97279 497.84173 L
270.01672 498.93250 L
269.97279 500.01846 L
269.89002 501.10894 L
269.77266 502.19660 L
269.61052 503.24202 L
269.32394 504.29027 L
269.04557 505.30082 L
268.68132 506.30740 L
268.32047 507.27430 L
267.87345 508.20633 L
267.39326 509.16784 L
266.90939 510.01398 L
266.34501 510.90463 L
265.73783 511.74935 L
265.09578 512.55383 L
264.40866 513.32117 L
263.72409 514.09049 L
262.95931 514.81502 L
262.19140 515.45764 L
261.38863 516.10706 L
260.53597 516.70630 L
259.69266 517.23241 L
258.76630 517.75540 L
257.87622 518.24239 L
256.90819 518.68148 L
255.90104 519.04205 L
254.93187 519.40772 L
253.92614 519.69260 L
252.87959 519.92872 L
251.87102 520.09285 L
250.78394 520.24961 L
249.65518 520.33606 L
248.60806 520.37660 L
247.47931 520.33606 L
246.38995 520.24961 L
245.34397 520.09285 L
244.25263 519.92872 L
243.24350 519.69260 L
242.19468 519.40772 L
241.23288 519.04205 L
240.26485 518.68148 L
239.33452 518.24239 L
238.36961 517.75540 L
237.48265 517.23241 L
236.63282 516.70630 L
235.74586 516.10706 L
234.97994 515.45764 L
234.21798 514.81502 L
233.44894 514.09049 L
232.72328 513.32117 L
232.08321 512.55383 L
231.43578 511.74935 L
230.83313 510.90463 L
230.26734 510.01398 L
229.74151 509.16784 L
229.25764 508.20633 L
228.84888 507.27430 L
228.45175 506.30740 L
228.13342 505.30082 L
227.84542 504.29027 L
227.60164 503.24202 L
227.44120 502.19660 L
227.24079 501.10894 L
227.20280 500.01846 L
227.16283 498.93250 L
227.20280 497.84173 L
227.24079 496.75181 L
227.44120 495.66161 L
227.60164 494.65984 L
227.84542 493.61272 L
228.13342 492.60132 L
228.45175 491.59361 L
228.84888 490.62614 L
229.25764 489.66236 L
229.74151 488.73402 L
230.26734 487.84479 L
230.83313 486.99751 L
231.43578 486.15052 L
232.08321 485.30721 L
232.72328 484.53902 L
233.44894 483.76998 L
234.21798 483.08598 L
234.97994 482.40227 L
235.74586 481.76079 L
236.63282 481.15502 L
237.48265 480.58923 L
238.36961 480.10791 L
239.33452 479.62602 L
240.26485 479.17928 L
241.23288 478.81474 L
242.19468 478.49216 L
243.24350 478.17241 L
244.25263 477.92920 L
245.34397 477.72765 L
246.38995 477.60803 L
247.47931 477.52554 L
248.60806 477.52554 L
S

@rax %Note: Object
227.16283 448.14019 328.70353 549.72312 @E
1 J 1 j [] 0 d 0 R 0 @G
0.81 0.69 0.69 0.63 K
[0.55987132 0.00000000 0.00000000 0.55987132 0.00000000 0.00000000] 1 0.97880 0.97880 0.00000 @w
/$fm 0 def
277.91603 448.14019 m
280.53184 448.21757 L
283.11420 448.42082 L
285.65291 448.70400 L
288.15250 449.18646 L
290.61099 449.75395 L
292.98869 450.43597 L
295.36271 451.24157 L
297.66671 452.12882 L
299.92337 453.13654 L
302.09783 454.30413 L
304.23288 455.51849 L
306.29140 456.84482 L
308.30655 458.25534 L
310.20123 459.78775 L
312.05906 461.40208 L
313.78819 463.05666 L
315.48472 464.83030 L
317.09849 466.64476 L
318.58469 468.57883 L
319.99351 470.55373 L
321.36718 472.64655 L
322.57757 474.74702 L
323.66381 476.92346 L
324.71291 479.17928 L
325.64013 481.51587 L
326.44970 483.85644 L
327.09061 486.27808 L
327.65726 488.73402 L
328.09606 491.23417 L
328.45975 493.77118 L
328.66044 496.31301 L
328.70353 498.93250 L
328.66044 501.55569 L
328.45975 504.13039 L
328.09606 506.66939 L
327.65726 509.16784 L
327.09061 511.59061 L
326.44970 514.00715 L
325.64013 516.38655 L
324.71291 518.68148 L
323.66381 520.89817 L
322.57757 523.11713 L
321.36718 525.25361 L
319.99351 527.30929 L
318.58469 529.28447 L
317.09849 531.18057 L
315.48472 533.02989 L
313.78819 534.81203 L
312.05906 536.49865 L
310.20123 538.11298 L
308.30655 539.60400 L
306.29140 541.01707 L
304.23288 542.34652 L
302.09783 543.59688 L
299.92337 544.68737 L
297.66671 545.73052 L
295.36271 546.66227 L
292.98869 547.46617 L
290.61099 548.11474 L
288.15250 548.67118 L
285.65291 549.11820 L
283.11420 549.47849 L
280.53184 549.68400 L
277.91603 549.72312 L
275.33169 549.68400 L
272.75102 549.47849 L
270.21090 549.11820 L
267.75383 548.67118 L
265.29647 548.11474 L
262.87455 547.46617 L
260.53597 546.66227 L
258.19880 545.73052 L
255.94441 544.68737 L
253.76797 543.59688 L
251.67146 542.34652 L
249.57184 541.01707 L
247.59723 539.60400 L
245.66683 538.11298 L
243.80957 536.49865 L
242.07449 534.81203 L
240.34564 533.02989 L
238.76816 531.18057 L
237.28365 529.28447 L
235.86803 527.30929 L
234.49776 525.25361 L
233.28907 523.11713 L
232.16230 520.89817 L
231.15402 518.68148 L
230.26734 516.38655 L
229.45861 514.00715 L
228.77433 511.59061 L
228.20967 509.16784 L
227.72551 506.66939 L
227.44120 504.13039 L
227.24079 501.55569 L
227.16283 498.93250 L
227.24079 496.31301 L
227.44120 493.77118 L
227.72551 491.23417 L
228.20967 488.73402 L
228.77433 486.27808 L
229.45861 483.85644 L
230.26734 481.51587 L
231.15402 479.17928 L
232.16230 476.92346 L
233.28907 474.74702 L
234.49776 472.64655 L
235.86803 470.55373 L
237.28365 468.57883 L
238.76816 466.64476 L
240.34564 464.83030 L
242.07449 463.05666 L
243.80957 461.40208 L
245.66683 459.78775 L
247.59723 458.25534 L
249.57184 456.84482 L
251.67146 455.51849 L
253.76797 454.30413 L
255.94441 453.13654 L
258.19880 452.12882 L
260.53597 451.24157 L
262.87455 450.43597 L
265.29647 449.75395 L
267.75383 449.18646 L
270.21090 448.70400 L
272.75102 448.42082 L
275.33169 448.21757 L
277.91603 448.14019 L
S

@rax %Note: Object
227.16283 411.62117 314.43279 586.23931 @E
1 J 1 j [] 0 d 0 R 0 @G
0.81 0.69 0.69 0.63 K
[0.55987132 0.00000000 0.00000000 0.55987132 0.00000000 0.00000000] 1 0.97880 0.97880 0.00000 @w
/$fm 0 def
314.43279 411.62117 m
309.92230 411.73937 L
305.52860 412.09880 L
301.17231 412.62406 L
296.90164 413.43307 L
292.66583 414.39685 L
288.55361 415.56841 L
284.48362 416.93613 L
280.49131 418.51162 L
276.66624 420.28668 L
272.87518 422.22132 L
269.20403 424.31443 L
265.69928 426.57477 L
262.27389 429.03099 L
258.96813 431.61506 L
255.78539 434.39386 L
252.79682 437.25288 L
249.85871 440.27660 L
247.11817 443.46331 L
244.53298 446.76369 L
242.11814 450.19361 L
239.81924 453.74400 L
237.72047 457.36980 L
235.78980 461.15773 L
234.05811 465.03156 L
232.48233 468.98192 L
231.07068 473.00939 L
229.90394 477.16129 L
228.93420 481.35713 L
228.16687 485.66863 L
227.60164 490.02463 L
227.28076 494.45688 L
227.16283 498.93250 L
227.28076 503.40274 L
227.60164 507.84066 L
228.16687 512.18986 L
228.93420 516.46762 L
229.90394 520.69691 L
231.07068 524.84939 L
232.48233 528.91965 L
234.05811 532.87058 L
235.78980 536.74384 L
237.72047 540.49380 L
239.81924 544.15956 L
242.11814 547.66800 L
244.53298 551.09339 L
247.11817 554.39887 L
249.85871 557.54362 L
252.79682 560.60476 L
255.78539 563.50687 L
258.96813 566.25080 L
262.27389 568.82721 L
265.69928 571.29165 L
269.20403 573.58602 L
272.87518 575.68082 L
276.66624 577.61688 L
280.49131 579.35310 L
284.48362 580.92350 L
288.55361 582.33231 L
292.66583 583.50416 L
296.90164 584.42854 L
301.17231 585.19531 L
305.52860 585.75798 L
309.92230 586.12224 L
314.43279 586.23931 L
S

@rax %Note: Object
184.30923 477.52554 227.16283 520.37660 @E
1 J 1 j [] 0 d 0 R 0 @G
0.81 0.69 0.69 0.63 K
[0.55987132 0.00000000 0.00000000 0.55987132 0.00000000 0.00000000] 1 0.97880 0.97880 0.00000 @w
/$fm 0 def
205.71562 477.52554 m
206.84466 477.52554 L
207.93543 477.60803 L
208.98255 477.72765 L
210.02712 477.92920 L
211.07395 478.17241 L
212.12986 478.49216 L
213.09194 478.81474 L
214.06252 479.17928 L
214.98917 479.62602 L
215.95266 480.10791 L
216.83991 480.58923 L
217.68973 481.15502 L
218.57641 481.76079 L
219.38031 482.40227 L
220.14822 483.08598 L
220.87389 483.76998 L
221.59814 484.53902 L
222.24104 485.30721 L
222.88989 486.15052 L
223.49055 486.99751 L
224.05606 487.84479 L
224.57820 488.73402 L
225.02636 489.66236 L
225.46687 490.62614 L
225.82800 491.59361 L
226.19140 492.60132 L
226.47969 493.61272 L
226.71723 494.65984 L
226.91679 495.66161 L
227.04265 496.75181 L
227.11975 497.84173 L
227.16283 498.93250 L
227.11975 500.01846 L
227.04265 501.10894 L
226.91679 502.19660 L
226.71723 503.24202 L
226.47969 504.29027 L
226.19140 505.30082 L
225.82800 506.30740 L
225.46687 507.27430 L
225.02636 508.20633 L
224.57820 509.16784 L
224.05606 510.01398 L
223.49055 510.90463 L
222.88989 511.74935 L
222.24104 512.55383 L
221.59814 513.32117 L
220.87389 514.09049 L
220.14822 514.81502 L
219.38031 515.45764 L
218.57641 516.10706 L
217.68973 516.70630 L
216.83991 517.23241 L
215.95266 517.75540 L
214.98917 518.24239 L
214.06252 518.68148 L
213.09194 519.04205 L
212.12986 519.40772 L
211.07395 519.69260 L
210.02712 519.92872 L
208.98255 520.09285 L
207.93543 520.24961 L
206.84466 520.33606 L
205.71562 520.37660 L
204.66652 520.33606 L
203.53776 520.24961 L
202.44983 520.09285 L
201.44211 519.92872 L
200.39556 519.69260 L
199.38529 519.40772 L
198.42066 519.04205 L
197.41039 518.68148 L
196.48743 518.24239 L
195.55937 517.75540 L
194.63216 517.23241 L
193.78658 516.70630 L
192.93506 516.10706 L
192.13285 515.45764 L
191.36523 514.81502 L
190.59704 514.09049 L
189.91219 513.32117 L
189.18822 512.55383 L
188.58501 511.74935 L
187.98151 510.90463 L
187.41231 510.01398 L
186.93213 509.16784 L
186.44457 508.20633 L
186.00661 507.27430 L
185.64066 506.30740 L
185.32006 505.30082 L
184.99096 504.29027 L
184.75824 503.24202 L
184.55357 502.19660 L
184.43480 501.10894 L
184.35203 500.01846 L
184.30923 498.93250 L
184.35203 497.84173 L
184.43480 496.75181 L
184.55357 495.66161 L
184.75824 494.65984 L
184.99096 493.61272 L
185.32006 492.60132 L
185.64066 491.59361 L
186.00661 490.62614 L
186.44457 489.66236 L
186.93213 488.73402 L
187.41231 487.84479 L
187.98151 486.99751 L
188.58501 486.15052 L
189.18822 485.30721 L
189.91219 484.53902 L
190.59704 483.76998 L
191.36523 483.08598 L
192.13285 482.40227 L
192.93506 481.76079 L
193.78658 481.15502 L
194.63216 480.58923 L
195.55937 480.10791 L
196.48743 479.62602 L
197.41039 479.17928 L
198.42066 478.81474 L
199.38529 478.49216 L
200.39556 478.17241 L
201.44211 477.92920 L
202.44983 477.72765 L
203.53776 477.60803 L
204.66652 477.52554 L
205.71562 477.52554 L
S

@rax %Note: Object
125.61902 448.14019 227.16283 549.72312 @E
1 J 1 j [] 0 d 0 R 0 @G
0.81 0.69 0.69 0.63 K
[0.55987132 0.00000000 0.00000000 0.55987132 0.00000000 0.00000000] 1 0.97880 0.97880 0.00000 @w
/$fm 0 def
176.40822 448.14019 m
178.98803 448.21757 L
181.57465 448.42082 L
184.10797 448.70400 L
186.60926 449.18646 L
189.06803 449.75395 L
191.44998 450.43597 L
193.78658 451.24157 L
196.12460 452.12882 L
198.38013 453.13654 L
200.55685 454.30413 L
202.65080 455.51849 L
204.74986 456.84482 L
206.72476 458.25534 L
208.65997 459.78775 L
210.51411 461.40208 L
212.24494 463.05666 L
213.93921 464.83030 L
215.55014 466.64476 L
217.04031 468.57883 L
218.45254 470.55373 L
219.78595 472.64655 L
220.99153 474.74702 L
222.12227 476.92346 L
223.16910 479.17928 L
224.05606 481.51587 L
224.86677 483.85644 L
225.54935 486.27808 L
226.11657 488.73402 L
226.55310 491.23417 L
226.87398 493.77118 L
227.07921 496.31301 L
227.16283 498.93250 L
227.07921 501.55569 L
226.87398 504.13039 L
226.55310 506.66939 L
226.11657 509.16784 L
225.54935 511.59061 L
224.86677 514.00715 L
224.05606 516.38655 L
223.16910 518.68148 L
222.12227 520.89817 L
220.99153 523.11713 L
219.78595 525.25361 L
218.45254 527.30929 L
217.04031 529.28447 L
215.55014 531.18057 L
213.93921 533.02989 L
212.24494 534.81203 L
210.51411 536.49865 L
208.65997 538.11298 L
206.72476 539.60400 L
204.74986 541.01707 L
202.65080 542.34652 L
200.55685 543.59688 L
198.38013 544.68737 L
196.12460 545.73052 L
193.78658 546.66227 L
191.44998 547.46617 L
189.06803 548.11474 L
186.60926 548.67118 L
184.10797 549.11820 L
181.57465 549.47849 L
178.98803 549.68400 L
176.40822 549.72312 L
173.78986 549.68400 L
171.20806 549.47849 L
168.66879 549.11820 L
166.16948 548.67118 L
163.71099 548.11474 L
161.33159 547.46617 L
158.95304 546.66227 L
156.65669 545.73052 L
154.40315 544.68737 L
152.22699 543.59688 L
150.08769 542.34652 L
148.02888 541.01707 L
146.01430 539.60400 L
144.12359 538.11298 L
142.26633 536.49865 L
140.53323 534.81203 L
138.83811 533.02989 L
137.22661 531.18057 L
135.74183 529.28447 L
134.32422 527.30929 L
132.99647 525.25361 L
131.74781 523.11713 L
130.65789 520.89817 L
129.61077 518.68148 L
128.68498 516.38655 L
127.87455 514.00715 L
127.23109 511.59061 L
126.66954 509.16784 L
126.22195 506.66939 L
125.85657 504.13039 L
125.66098 501.55569 L
125.61902 498.93250 L
125.66098 496.31301 L
125.85657 493.77118 L
126.22195 491.23417 L
126.66954 488.73402 L
127.23109 486.27808 L
127.87455 483.85644 L
128.68498 481.51587 L
129.61077 479.17928 L
130.65789 476.92346 L
131.74781 474.74702 L
132.99647 472.64655 L
134.32422 470.55373 L
135.74183 468.57883 L
137.22661 466.64476 L
138.83811 464.83030 L
140.53323 463.05666 L
142.26633 461.40208 L
144.12359 459.78775 L
146.01430 458.25534 L
148.02888 456.84482 L
150.08769 455.51849 L
152.22699 454.30413 L
154.40315 453.13654 L
156.65669 452.12882 L
158.95304 451.24157 L
161.33159 450.43597 L
163.71099 449.75395 L
166.16948 449.18646 L
168.66879 448.70400 L
171.20806 448.42082 L
173.78986 448.21757 L
176.40822 448.14019 L
S

@rax %Note: Object
139.88580 411.62117 227.16283 586.23931 @E
1 J 1 j [] 0 d 0 R 0 @G
0.81 0.69 0.69 0.63 K
[0.55987132 0.00000000 0.00000000 0.55987132 0.00000000 0.00000000] 1 0.97880 0.97880 0.00000 @w
/$fm 0 def
139.88580 411.62117 m
144.36709 411.73937 L
148.80047 412.09880 L
153.15250 412.62406 L
157.46627 413.43307 L
161.65304 414.39685 L
165.76356 415.56841 L
169.83893 416.93613 L
173.83238 418.51162 L
177.65717 420.28668 L
181.44680 422.22132 L
185.07770 424.31443 L
188.61902 426.57477 L
192.04923 429.03099 L
195.35839 431.61506 L
198.49890 434.39386 L
201.56287 437.25288 L
204.46611 440.27660 L
207.16554 443.46331 L
209.78929 446.76369 L
212.20753 450.19361 L
214.50189 453.74400 L
216.60038 457.36980 L
218.53559 461.15773 L
220.26756 465.03156 L
221.84107 468.98192 L
223.21247 473.00939 L
224.41776 477.16129 L
225.39033 481.35713 L
226.15767 485.66863 L
226.67981 490.02463 L
227.04265 494.45688 L
227.16283 498.93250 L
227.04265 503.40274 L
226.67981 507.84066 L
226.15767 512.18986 L
225.39033 516.46762 L
224.41776 520.69691 L
223.21247 524.84939 L
221.84107 528.91965 L
220.26756 532.87058 L
218.53559 536.74384 L
216.60038 540.49380 L
214.50189 544.15956 L
212.20753 547.66800 L
209.78929 551.09339 L
207.16554 554.39887 L
204.46611 557.54362 L
201.56287 560.60476 L
198.49890 563.50687 L
195.35839 566.25080 L
192.04923 568.82721 L
188.61902 571.29165 L
185.07770 573.58602 L
181.44680 575.68082 L
177.65717 577.61688 L
173.83238 579.35310 L
169.83893 580.92350 L
165.76356 582.33231 L
161.65304 583.50416 L
157.46627 584.42854 L
153.15250 585.19531 L
148.80047 585.75798 L
144.36709 586.12224 L
139.88580 586.23931 L
S

@rax 218.41625 581.33537 223.46617 587.80715 @E
[0.00028346 0.00000000 0.00000000 0.00028346 218.41624398 583.38536449] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/CMMI9 35278.00000 z
%CHAR: 0 0 (y) @t
17710 13588 m
17745 13764 17815 13976 17815 14188 c
17815 14646 17498 15211 16722 15211 c
16263 15211 15628 14928 15346 14258 c
15311 14117 14958 12671 14746 11895 c
12982 4839 l
12700 3816 12700 3745 12630 3428 c
12594 3287 11113 500 8573 500 c
6385 500 6385 2722 6385 3393 c
6385 4980 6844 6709 8361 10660 c
8643 11471 8855 11965 8855 12635 c
8855 14364 7549 15599 5821 15599 c
2434 15599 1023 10589 1023 10166 c
1023 9848 1270 9743 1517 9743 c
1905 9743 1940 9954 2081 10413 c
2822 13023 4233 14717 5715 14717 c
6562 14717 6562 14047 6562 13553 c
6562 12953 6421 12318 6103 11471 c
4445 7097 3986 5615 3986 3922 c
3986 6 7161 -388 8467 -388 c
10195 -388 11430 535 12065 1170 C
11606 -635 11218 -2223 9843 -3986 c
8784 -5398 7373 -6350 5821 -6350 c
4833 -6350 3669 -5997 3175 -5009 C
5045 -5009 5292 -3457 5292 -3104 c
5292 -2328 4727 -1834 3951 -1834 c
3104 -1834 1976 -2505 1976 -4128 c
1976 -5962 3598 -7232 5821 -7232 c
9419 -7232 13265 -4163 14288 -35 c
17710 13588 l
@c
F
T
@rax 341.97279 488.42759 347.35294 492.95934 @E
[0.00028346 0.00000000 0.00000000 0.00028346 341.97277489 488.53755693] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/CMMI9 35278.00000 z
%CHAR: 0 0 (x) @t
17357 14258 m
16051 14011 15663 12882 15663 12353 c
15663 11683 16157 11083 17039 11083 c
18027 11083 18980 11930 18980 13165 c
18980 14787 17216 15599 15558 15599 c
13441 15599 12206 13729 11783 12988 C
11113 14717 9560 15599 7867 15599 c
4092 15599 2046 11083 2046 10166 c
2046 9848 2293 9743 2540 9743 c
2858 9743 2963 9919 3034 10131 c
4128 13623 6456 14717 7796 14717 c
8820 14717 9737 14047 9737 12388 c
9737 11118 8220 5474 7761 3781 c
7479 2687 6421 500 4480 500 c
3775 500 3034 747 2681 958 C
3634 1135 4339 1946 4339 2863 c
4339 3745 3669 4133 2999 4133 c
1976 4133 1058 3251 1058 2052 c
1058 323 2963 -388 4445 -388 c
6491 -388 7691 1311 8220 2264 C
9102 -71 11183 -388 12136 -388 c
15946 -388 17957 4204 17957 5051 c
17957 5227 17851 5474 17498 5474 c
17110 5474 17075 5333 16898 4804 c
16122 2264 14076 500 12241 500 c
11218 500 10266 1135 10266 2828 c
10266 3604 10760 5545 11077 6885 c
11218 7520 12171 11330 12241 11577 c
12665 12847 13723 14717 15522 14717 c
16157 14717 16828 14611 17357 14258 C
@c
F
T
 @gs spg @gr
%%PageTrailer
@rs
@rs

%%Page: 2 2
%LogicalPage: 2
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF
